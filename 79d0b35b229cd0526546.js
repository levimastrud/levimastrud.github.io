import"./style.css";import*as THREE from"three";const textureLoader=new THREE.TextureLoader,normalTexture=textureLoader.load("/textures/NormalMap.png"),canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,geometry=new THREE.TorusKnotGeometry(3,.09,200,8,3,4),material=new THREE.MeshPhysicalMaterial;material.color=new THREE.Color(16777215),material.reflectivity=0,material.normalMap=normalTexture,material.thickness=1,material.ior=0;const sphere=new THREE.Mesh(geometry,material);scene.add(sphere);const pointLight=new THREE.PointLight(16777215,.1);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight);const pointLight2=new THREE.PointLight(16777215,1);pointLight2.position.set(-3.5,1.79,-3.06),pointLight2.intensity=1,scene.add(pointLight2);const pointLight3=new THREE.PointLight(5066081,1);pointLight3.position.set(-10,1,1),pointLight3.intensity=.5,pointLight3.decay=2,pointLight3.distance="Physically",pointLight3.shadow=1e3,scene.add(pointLight3);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=0,camera.position.y=0,camera.position.z=2,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.addEventListener("mousemove",onDocumentMouseMove);let mouseX=0,mouseY=0,targetX=0,targetY=0;const windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2;function onDocumentMouseMove(e){mouseX=e.clientX-windowHalfX,mouseY=e.clientY-windowHalfY}function updateSphere(e){sphere.position.y=.01*window.scrollY}window.addEventListener("scroll",updateSphere);const clock=new THREE.Clock,tick=()=>{targetX=.001*mouseX,targetY=.001*mouseY;const e=clock.getElapsedTime();sphere.rotation.y=.08*e,sphere.rotation.y+=.3*(targetX-sphere.rotation.y),sphere.rotation.x+=.3*(targetY-sphere.rotation.x),sphere.position.z+=-1*(targetY-sphere.rotation.x),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();